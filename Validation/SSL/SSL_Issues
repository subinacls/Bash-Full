### show SSL Certificate Expiration date
ssldate() { mkdir SSLCerts 2>/dev/null; echo -e "\n\n\n" | openssl s_client -connect $1 2>/dev/null | openssl x509 -enddate -noout | tee ./SSLCerts/`echo "SSL_Cert_Dates_$1"` | cut -d"=" -f2; }  # Example: sslsubject server.net:port
### shows SSL subject line of certificate
sslsubject() { echo | openssl s_client -connect $1 | openssl x509 -noout -subject | tee ./SSLCerts/`echo "SSL_Cert_Subject_$1"`; }  # Example: sslsubject server.net:port

### shows SSL issuer line of certificate
sslissue() { mkdir SSLCerts 2>/dev/null; echo | openssl s_client -connect $1 | openssl x509 -noout -issuer | tee ./SSLCerts/`echo "SSL_Cert_Issuer_$1"`; }  # Example: sslissue server.net:port

### shows SSL certificate hash value
sslhash() { mkdir SSLCerts 2>/dev/null; echo | openssl s_client -connect $1 | openssl x509 -noout -hash | tee ./SSLCerts/`echo "SSL_Cert_Hash_$1"`; }  # Example: sslhash server.net:port

### calculates the MD5 of the certificate
sslmd5() { mkdir SSLCerts 2>/dev/null; echo | openssl s_client -connect $1 | openssl x509 -noout -fingerprint | tee ./SSLCerts/`echo "SSL_Cert_Fingerprint_$1"`; }  # Example: sslmd5 server.net:port

### basic information gathering on the certificte
sslgather() { echo | openssl s_client -connect $1 | openssl x509 -noout -issuer -subject -dates | tee ./SSLCerts/`echo "SSL_Cert_Info_$1"`; }  # Example: sslgather server.net:port

### DUMP of all information contained in the certificate
sslall() { mkdir SSLCerts 2>/dev/null; echo | openssl s_client -connect $1 | openssl x509 -noout -text | tee ./SSLCerts/`echo "SSL_Cert_Dump_$1"`; }  # Example: sslall server.net:port




#########
## check if certificate is expired
checkexp() { certdate=$(date --date="$(ssldate `echo $1`)" +%s); 
    today=$(date +%s);
    if [ $certdate -ge $today ]; then 
      echo "Pass"; 
    else 
      echo "Fail: $certdate";
    fi;
}

expirewarn() {
  grep -i "not valid after" ./sslscan/* |\
  grep -Ev "(20(18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55))" |\
  sed -r "s/\:  /:\t/g"; 
}

bulksslscan() { mkdir sslscan 2>/dev/null;
  for x in $(cat $1); do
    echo "Scanning the following system: `echo $x`";
    sslscan $x:443 | tee ./sslscan/sslscan_`echo $x` >/dev/null;
  done;
  expirewarn
}

